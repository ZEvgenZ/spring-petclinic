---
- hosts: DB_HOST
  become: yes
  # vars:
  #   db_user: '{{ DB_USER }}'
  #   db_pass: '{{ DB_PASS }}'
  #   db_host: '{{ DB_HOST }}'
  #   db_port: '{{ DB_PORT }}'
  #   db_name: '{{ DB_NAME }}'
  #   app_host: '{{ APP_HOST }}' 
  
  tasks:
    # - name: Update yum
    #   yum:
    #     name: '*'
    #     state: latest
    #     update_cache: yes
        
    - name: Install packages
      yum:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - git
        - docker 
        - python-pip
      
  ############################## create database  ###################
    # - name: Start the MySQL service
    #   service:
    #     name: mysql
    #     state: started
    #     enabled: true

    # - name: Removes all anonymous user accounts
    #   mysql_user:
    #     name: ''
    #     host_all: yes
    #     state: absent

    # - name: Removes test database
    #   mysql_db:
    #     name: test
    #     state: absent

    # - name: Create new database
    #   mysql_db:
    #     name: "{{ db_name }}"
    #     state: present
        
    # - name: Create new database user
    #   mysql_user:
    #     name: '{{ db_user }}'
    #     password: '{{ db_pass }}'
    #     priv: '{{ db_name }}.*:ALL,GRANT'
    #     host: "{{ app_host }}"
    #     state: present

    # - name: Copy my.cnf file to User_dir
    #   template:
    #     src: ./my.cnf
    #     dest: /root/my.cnf
    #     owner: root
    #     mode: 0600
    
    # - name: Copy cnf file
    #   template:
    #     src: my.cnf
    #     dest: /etc/my.cnf
    #     owner: root
    #     mode: 0600

    # - name: Restart MySQL
    #   service:
    #     name: mysql
    #     state: restarted
  ############################################################# end create DB #########################      
        
    - name: pip 
      shell: pip install docker-compose
      state: present

    - name: add user to docker 
      shell: usermod -a -G docker ec2-user 
      state: present

    - name: Restart docker
      service:
        name: docker
        state: restarted

    - name: service copy
      copy:
        src: docker-compose@.service
        dest: /etc/systemd/system/docker-compose@.service
        mode: 0600 

    - name: copy
      copy:
        src: docker-compose.yml
        dest: /home/ec2-user/docker-compose.yml
        owner: ec2-user
        mode: 0600 

    - name: restart systemd 
      shell: systemctl daemon-reload && systemctl enable docker-compose@myservice.service
      
    - name: Start Compose
      service:
        name: docker-compose@myservice.service
        state: started    
  
   
