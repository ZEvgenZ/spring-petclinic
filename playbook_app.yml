---
- hosts: APP_VM
  #connection: local
  #remote_user: ec2-user
  become: yes
  #become_method: sudo
  vars:
    app_user: '{{ APP_USER }}'
    app_pass: '{{ APP_PASS }}'       
    #download_url: http://download.oracle.com/otn-pub/java/jdk/10.0.1+10/fb4372174a714e6b8c52526dc134031e/jdk-10.0.1_linux-x64_bin.rpm
    #download_folder: ~/JDK
    #java_name: "{{download_folder}}/jdk-10.0.1_linux-x64_bin.rpm"
    #java_archive: "{{download_folder}}/jdk-10.0.1_linux-x64_bin.rpm"
    project_dir: ~/PROJECT_DIR
    app_dir: /home/{{ app_user }}/app
    app_host_app: 10.0.10.200

  tasks:
    - name: Update yum
      yum:
        name: '*'
        state: latest
        update_cache: yes
        
    - name: Install packages
      yum:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - wget
        - git
        - java-1.8.0-openjdk-devel
       
        - MySQL-python
        - mariadb
       
        
    - name: Check that user can connect to database
      mysql_db:
        login_user: usersql
        login_password: 123456
        login_host: 10.0.10.100
        login_port: 3306
        name: petclinic
        state: present
        
    - name: create user for app
      user:
        name: '{{ app_user }}'
        password: '{{ app_pass }}'

    
            
   
    
    #- name: Make Java available for system
    #  command: 'alternatives --install "/usr/bin/java" "java" "{{java_name}}/bin/java" 2000'

    #- name: Git_Clone
    #  git:
    #    repo: 'https://github.com/DmyMi/spring-petclinic.git'
    ##    dest: '{{ project_dir }}'
    #  register: latest_version

    #- name: install and run maven build
    #  shell: |
    #    cd {{ project_dir }}
    #    {{ project_dir }}/mvnw  package
    #  register: app_up
    #  when: latest_version is changed

    #- name: mkdir
    #  command: "mkdir -p {{ app_dir }}"
    #  become: yes
    #  #become_mode: su
    #  become_user: "{{ app_user }}"
    #  when: app_up is changed

    #- name: copy jar file
    #  shell: cp {{ project_dir }}/target/*.jar {{ app_dir }}/
    #  when: app_up is changed

    - name: copy jar file
      copy:
        src: "{{ item }}"
        dest: "{{ app_dir }}"
      with_fileglob:
        - target/*.jar
      become_user: "{{ app_user }}"

    - name: run app
      shell: su -c "java -jar {{ app_dir }}/*.jar &" {{ app_user }}
      become: yes
      environment:
        DB_USER: '{{ db_user }}'
        DB_NAME: '{{ db_name }}'
        DB_PASS: '{{ db_pass }}'
        DB_HOST: '{{ db_host }}'
        DB_PORT: '{{ db_port }}'

    - name: Get my public IP from ipify.org
      ipify_facts:

    - name: URL to the web aplication
      debug: msg='{{ ipify_public_ip }}'
    
    - name: Wait for the application to start
      wait_for:
        timeout: 60
        host: {{ ipify_public_ip }}
        port: 8080

    - name: Application healthcheck
      uri:
        url: "http://{{ ipify_public_ip }}:8080/manage/health"
      return_content: yes
      register: health

    - name: Ð¡heck if the application is running
      debug: msg='The application is running'
      when: health.json.status == "UP"         
   